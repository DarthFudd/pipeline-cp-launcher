{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "storageNamePrefix": {
            "type": "string",
            "minLength": "3",
            "maxLength": "10",
            "defaultValue": "storage",
            "metadata": {
              "description": "The prefix of the storage account name. Use only lowercase letters and numbers."
            }
        },
        "storageAccountSKU": {
            "defaultValue": "Premium_LRS",
            "allowedValues": [
                "Premium_LRS",
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Standard_ZRS"
            ],
            "type": "string",
            "metadata": {
                "description": "The type of the Storage account SKU that will use the Pipeline Control Plane."
            }
        },
        "sshUserName": {
            "defaultValue": "ubuntu",
            "type": "string",
            "metadata": {
                "description": "The username SSH to the Virtual Machine hosting Pipeline Control Plane."
            }
        },
        "sshPublicKey": {
            "type": "string",
            "metadata": {
                "description": "The SSH public key in text format which will be assigned to the SSH User."
            }
        },
        "vmSize": {
            "defaultValue": "Standard_A2",
            "allowedValues": [
                "Standard_A1",
                "Standard_A2"
            ],
            "type": "string",
            "metadata": {
                "description": "The size of the Virtual Machine that will host the Pipeline Control Plane. For example: Standard_XX where XX can A1, A2, A3 etc"
            }
        },
        "vmNamePrefix": {
            "defaultValue": "pipeline-cp",
            "type": "string",
            "minLength":"1",
            "maxLength": "49",
            "metadata": {
                "description": "The prefix of the virtual machine that will host the Pipeline Control Plane."
            }
        },
        "smtpServerAddress": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Optional. The address of your SMTP server. Fill this property to receive cluster related alerts through email."
            }
        },
        "smtpUser": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Optional. The username of your SMTP account. Fill this property to receive cluster related alerts through email."
            }
        },
        "smtpPassword": {
            "defaultValue": "",
            "type": "securestring",
            "metadata": {
                "description": "Optional. The password of your SMTP account. Fill this property to receive cluster related alerts through email."
            }
        },
        "smtpFrom": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Optional. The email address that will be used as a 'from' address. Fill this property to receive cluster related alerts through email."
            }
        },
        "slackWebhookUrl": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Optional. The slack web hook URL. Fill this property to receive cluster related alerts through Slack."
            }
        },
        "slackChannel": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. A Slack channel by name with \"channel\": \"#other-channel\", or send a Slackbot message to a specific user with \"channel\": \"@username\". Fill this property to receive cluster related alerts through Slack. "
            }
        },
        "oauthEnabled": {
            "defaultValue": "false",
            "type": "string",
            "allowedValues": ["false", "true"],
            "metadata": {
                "description": "Enables OAuth based authentication and JWT based authorization for using Pipeline API."
            }
        },
        "pipelineIngUser": {
            "defaultValue": "admin",
            "type": "string",
            "metadata": {
                "description": "Please specify the username of the Pipeline API to be created. This field is not used if OAuth is enabled."
            }
        },
        "pipelineIngPass": {
            "type": "securestring",
            "minLength": 8,
            "metadata": {
                "description": "Please specify the password of the Pipeline API to be created. This field is not used if OAuth is enabled."
            }
        },
        "pipelineImageTag": {
            "defaultValue": "latest",
            "type": "string",
            "metadata": {
                "description": "Please specify the version of Pipline image to be used."
            }
        },
        "promIngUser": {
            "defaultValue": "admin",
            "minLength": 1,
            "type": "string",
            "metadata": {
                "description": "Please specify the username of the Prometheus user to be created."
            }
        },
        "promIngPass": {
            "type": "securestring",
            "minLength": 8,
            "metadata": {
                "description": "Please specify the password of the Prometheus user to be created."
            }
        },
        "grafanaUser": {
            "type": "string",
            "defaultValue": "admin",
            "minLength": 1,
            "metadata": {
                "description": "Please specify the username of the Grafana user to be created."
            }
        },
        "grafanaPass": {
            "type": "securestring",
            "minLength": 8,
            "metadata": {
                "description": "Please specify the password of the Grafana user to be created."
            }
        },
        "droneOrgs": {
            "type": "string",
            "metadata": {
                "description": "Please specify the GitHub organizations whose repositories will be used by the Pipeline."
            }
        },
        "droneGithubClient": {
            "type": "string",
            "metadata": {
                "description": "The Cliend ID of the newly created OAuth App in GitHub."
            }
        },
        "droneGithubSecret": {
            "type": "securestring",
            "metadata": {
                "description": "The Cliend Secret of the newly created OAuth App in GitHub."
            }
        },
        "azureClientId": {
            "type": "string",
            "metadata": {
                "description": "The ID of registered application in AD."
            }
        },
        "azureClientSecret": {
            "type": "securestring",
            "metadata": {
                "description": "The password of the registered application in AD."
            }
        },
        "azureSubscriptionId": {
            "type": "string",
            "metadata": {
                "description": "The id of your subscription that you want to use."
            }
        },
        "azureTenantId": {
            "type": "string",
            "metadata": {
                "description": "The tenant id of your azure account."
            }
        },
        "pipelineHelmRetryattempt": {
            "type": "string",
            "defaultValue": "30",
            "metadata": {
                "description": "The number of attemps that Pipeline tries to install Helm. Also the number times Pipeline pings Helm/Tiller wether it's up and running."
            }
        },
        "pipelineHelmRetrysleepseconds": {
            "type": "string",
            "defaultValue": "15",
            "metadata": {
                "description": "The time in seconds that Pipeline waits between attempts."
            }
        }
    },
    "variables": {
        "imagePublisher": "Canonical",
        "imageOffer": "UbuntuServer",
        "imageSku": "16.04-LTS",
        "imageVersion": "latest",
        "suffix": "[tolower(uniqueString(resourceGroup().id, deployment().name, subscription().subscriptionId))]",
        "storageAccount": "[concat(parameters('storageNamePrefix'),variables('suffix'))]",
        "networkInterface": "[concat(parameters('vmNamePrefix'),'-nInterface-',variables('suffix'))]",
        "publicIPAddresses": "[concat(parameters('vmNamePrefix'),'-publicIP-',variables('suffix'))]",
        "virtualNetwork": "[concat(parameters('vmNamePrefix'),'-vNet-',variables('suffix'))]",
        "virtualNetworkSubnet": "[concat(parameters('vmNamePrefix'),'-vNetSunet-',variables('suffix'))]",
        "networkSecurityGroup": "[concat(parameters('vmNamePrefix'),'-networkSG-',variables('suffix'))]",
        "userDataScript": "[concat('#!/bin/bash\n','echo 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 | base64 -d | gunzip | ','SMTP_SERVER_ADDRESS=',parameters('smtpServerAddress'),' ','SMTP_USER=',parameters('smtpUser'),' ','SMTP_PASSWORD=',base64(parameters('smtpPassword')),' ','SMTP_FROM=',parameters('smtpFrom'),' ','SLACK_WEBHOOK_URL=',parameters('slackWebhookUrl'),' ','SLACK_CHANNEL=',parameters('slackChannel'),' ','PIPELINE_OAUTH_ENABLED=',parameters('oauthEnabled'),' ','PIPELINE_ING_USER=',parameters('pipelineIngUser'),' ','PIPELINE_ING_PASS=',parameters('pipelineIngPass'),' ','PIPELINE_IMAGE_TAG=',parameters('pipelineImageTag'),' ','PROM_ING_USER=',parameters('promIngUser'),' ','PROM_ING_PASS=',parameters('promIngPass'),' ','GRAFANA_USER=',parameters('grafanaUser'),' ','GRAFANA_PASS=',parameters('grafanaPass'),' ','DRONE_ORGS=',parameters('droneOrgs'),' ','DRONE_GITHUB_CLIENT=',parameters('droneGithubClient'),' ','DRONE_GITHUB_SECRET=',parameters('droneGithubSecret'),' ','AZURE_CLIENT_ID=',base64(parameters('azureClientId')),' ','AZURE_CLIENT_SECRET=',base64(parameters('azureClientSecret')),' ','AZURE_SUBSCRIPTION_ID=',base64(parameters('azureSubscriptionId')),' ','AZURE_TENANT_ID=',base64(parameters('azureTenantId')),' ','PIPELINE_HELM_RETRYATTEMPT=',parameters('pipelineHelmRetryattempt'),' ','PIPELINE_HELM_RETRYSLEEPSECONDS=',parameters('pipelineHelmRetrysleepseconds'),' ','bash')]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccount')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane Storage Account"
            },
            "properties": {
                "accountType": "[parameters('storageAccountSKU')]"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddresses')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane Public IP Address"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[tolower(concat(parameters('vmNamePrefix'),'-',variables('suffix')))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetwork')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane VirtualNetwork"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('virtualNetworkSubnet')]",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24"
                        },
                        "tags": {
                            "displayName": "Control Plane VirtualNetwork Subnet"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('networkSecurityGroup')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane Network Security Group"
            },
            "properties": {
                "securityRules": [
                    {
                        "name": "ssh",
                        "properties": {
                            "description": "Allow SSH",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 200,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "http",
                        "properties": {
                            "description": "Allow HTTP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 210,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('networkInterface')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane Network Interface"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddresses'))]"
                            },
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetwork')), '/subnets/', variables('virtualNetworkSubnet'))]"
                            }
                        }
                    }
                ]
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/',variables('publicIPAddresses'))]",
                "[concat('Microsoft.Network/virtualNetworks/',variables('virtualNetwork'))]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(parameters('vmNamePrefix'),'-', variables('suffix'))]",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane VM"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(parameters('vmNamePrefix'), variables('suffix'))]",
                    "adminUsername": "[parameters('sshUserName')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/',parameters('sshUserName'),'/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('sshPublicKey')]"
                                }
                            ]
                        }
                    },
                    "customData": "[base64(variables('userDataScript'))]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('imageSku')]",
                        "version": "[variables('imageVersion')]"
                    },
                    "osDisk": {
                        "name": "[tolower(concat(parameters('vmNamePrefix'),'-disk-', variables('suffix')))]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterface'))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccount'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterface'))]"
            ]
        }
    ],
    "outputs": {
      "subscriptionOutput": {
          "value": "[deployment()]",
          "type" : "object"
      }
    }
}
