{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "storageNamePrefix": {
            "type": "string",
            "minLength": "3",
            "maxLength": "10",
            "defaultValue": "storage",
            "metadata": {
              "description": "The prefix of the storage account name. Use only lowercase letters and numbers."
            }
        },
        "storageAccountSKU": {
            "defaultValue": "Premium_LRS",
            "allowedValues": [
                "Premium_LRS",
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Standard_ZRS"
            ],
            "type": "string",
            "metadata": {
                "description": "The type of the Storage account SKU that will use the Pipeline Control Plane."
            }
        },
        "sshUserName": {
            "defaultValue": "ubuntu",
            "type": "string",
            "metadata": {
                "description": "The username SSH to the Virtual Machine hosting Pipeline Control Plane."
            }
        },
        "sshPublicKey": {
            "type": "string",
            "metadata": {
                "description": "The SSH public key in text format which will be assigned to the SSH User."
            }
        },
        "vmSize": {
            "defaultValue": "Standard_B2ms",
            "allowedValues": [
                "Standard_B2s",
                "Standard_B2ms"
            ],
            "type": "string",
            "metadata": {
                "description": "The size of the Virtual Machine that will host the Pipeline Control Plane. For example: Standard_XX where XX can A1, A2, A3 etc"
            }
        },
        "vmNamePrefix": {
            "defaultValue": "pipeline-cp",
            "type": "string",
            "minLength":"1",
            "maxLength": "49",
            "metadata": {
                "description": "The prefix of the virtual machine that will host the Pipeline Control Plane."
            }
        },
        "smtpServerAddress": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Optional. The address of your SMTP server. Fill this property to receive cluster related alerts through email."
            }
        },
        "smtpUser": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Optional. The username of your SMTP account. Fill this property to receive cluster related alerts through email."
            }
        },
        "smtpPassword": {
            "defaultValue": "",
            "type": "securestring",
            "metadata": {
                "description": "Optional. The password of your SMTP account. Fill this property to receive cluster related alerts through email."
            }
        },
        "smtpFrom": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Optional. The email address that will be used as a 'from' address. Fill this property to receive cluster related alerts through email."
            }
        },
        "smtpTo": {
            "defaultValue": "to@example.com",
            "type": "string",
            "metadata": {
                "description": "Optional. Fill this property to receive cluster related alerts through email."
            }
        },
        "slackWebhookUrl": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Optional. The slack web hook URL. Fill this property to receive cluster related alerts through Slack."
            }
        },
        "slackChannel": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. A Slack channel by name with \"channel\": \"#other-channel\", or send a Slackbot message to a specific user with \"channel\": \"@username\". Fill this property to receive cluster related alerts through Slack. "
            }
        },
        "oauthEnabled": {
            "defaultValue": "false",
            "type": "string",
            "allowedValues": ["false", "true"],
            "metadata": {
                "description": "Enables OAuth based authentication and JWT based authorization for using Pipeline API."
            }
        },
        "pipelineIngUser": {
            "defaultValue": "admin",
            "type": "string",
            "metadata": {
                "description": "Please specify the username of the Pipeline API to be created. This field is not used if OAuth is enabled."
            }
        },
        "pipelineIngPass": {
            "type": "securestring",
            "minLength": 8,
            "metadata": {
                "description": "Please specify the password of the Pipeline API to be created. This field is not used if OAuth is enabled."
            }
        },
        "pipelineImageTag": {
            "defaultValue": "latest",
            "type": "string",
            "metadata": {
                "description": "Please specify the version of Pipline image to be used."
            }
        },
        "promIngUser": {
            "defaultValue": "admin",
            "minLength": 1,
            "type": "string",
            "metadata": {
                "description": "Please specify the username of the Prometheus user to be created."
            }
        },
        "promIngPass": {
            "type": "securestring",
            "minLength": 8,
            "metadata": {
                "description": "Please specify the password of the Prometheus user to be created."
            }
        },
        "grafanaUser": {
            "type": "string",
            "defaultValue": "admin",
            "minLength": 1,
            "metadata": {
                "description": "Please specify the username of the Grafana user to be created."
            }
        },
        "grafanaPass": {
            "type": "securestring",
            "minLength": 8,
            "metadata": {
                "description": "Please specify the password of the Grafana user to be created."
            }
        },
        "githubOrgs": {
            "type": "string",
            "metadata": {
                "description": "Please specify the GitHub organizations whose repositories will be used by the Pipeline."
            }
        },
        "githubClient": {
            "type": "string",
            "metadata": {
                "description": "The Cliend ID of the newly created OAuth App in GitHub."
            }
        },
        "githubSecret": {
            "type": "securestring",
            "metadata": {
                "description": "The Cliend Secret of the newly created OAuth App in GitHub."
            }
        },
        "azureClientId": {
            "type": "string",
            "metadata": {
                "description": "The ID of registered application in AD."
            }
        },
        "azureClientSecret": {
            "type": "securestring",
            "metadata": {
                "description": "The password of the registered application in AD."
            }
        },
        "azureSubscriptionId": {
            "type": "string",
            "metadata": {
                "description": "The id of your subscription that you want to use."
            }
        },
        "azureTenantId": {
            "type": "string",
            "metadata": {
                "description": "The tenant id of your azure account."
            }
        },
        "pipelineHelmRetryattempt": {
            "type": "string",
            "defaultValue": "30",
            "metadata": {
                "description": "The number of attemps that Pipeline tries to install Helm. Also the number times Pipeline pings Helm/Tiller wether it's up and running."
            }
        },
        "pipelineHelmRetrysleepseconds": {
            "type": "string",
            "defaultValue": "15",
            "metadata": {
                "description": "The time in seconds that Pipeline waits between attempts."
            }
        }
    },
    "variables": {
        "imagePublisher": "Canonical",
        "imageOffer": "UbuntuServer",
        "imageSku": "16.04-LTS",
        "imageVersion": "latest",
        "suffix": "[tolower(uniqueString(resourceGroup().id, deployment().name, subscription().subscriptionId))]",
        "storageAccount": "[concat(parameters('storageNamePrefix'),variables('suffix'))]",
        "networkInterface": "[concat(parameters('vmNamePrefix'),'-nInterface-',variables('suffix'))]",
        "publicIPAddresses": "[concat(parameters('vmNamePrefix'),'-publicIP-',variables('suffix'))]",
        "virtualNetwork": "[concat(parameters('vmNamePrefix'),'-vNet-',variables('suffix'))]",
        "virtualNetworkSubnet": "[concat(parameters('vmNamePrefix'),'-vNetSunet-',variables('suffix'))]",
        "networkSecurityGroup": "[concat(parameters('vmNamePrefix'),'-networkSG-',variables('suffix'))]",
        "userDataScript": "[concat('#!/bin/bash\n','echo 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 | base64 -d | gunzip | ','SMTP_SERVER_ADDRESS=',parameters('smtpServerAddress'),' ','SMTP_USER=',parameters('smtpUser'),' ','SMTP_PASSWORD=',base64(parameters('smtpPassword')),' ','SMTP_FROM=',parameters('smtpFrom'),' ','SMTP_TO=',parameters('smtpTo'),' ','SLACK_WEBHOOK_URL=',parameters('slackWebhookUrl'),' ','SLACK_CHANNEL=',parameters('slackChannel'),' ','PIPELINE_OAUTH_ENABLED=',parameters('oauthEnabled'),' ','PIPELINE_ING_USER=',parameters('pipelineIngUser'),' ','PIPELINE_ING_PASS=',parameters('pipelineIngPass'),' ','PIPELINE_IMAGE_TAG=',parameters('pipelineImageTag'),' ','PROM_ING_USER=',parameters('promIngUser'),' ','PROM_ING_PASS=',parameters('promIngPass'),' ','GRAFANA_USER=',parameters('grafanaUser'),' ','GRAFANA_PASS=',parameters('grafanaPass'),' ','GITHUB_ORGS=',parameters('githubOrgs'),' ','GITHUB_CLIENT=',parameters('githubClient'),' ','GITHUB_SECRET=',parameters('githubSecret'),' ','AZURE_CLIENT_ID=',base64(parameters('azureClientId')),' ','AZURE_CLIENT_SECRET=',base64(parameters('azureClientSecret')),' ','AZURE_SUBSCRIPTION_ID=',base64(parameters('azureSubscriptionId')),' ','AZURE_TENANT_ID=',base64(parameters('azureTenantId')),' ','PIPELINE_HELM_RETRYATTEMPT=',parameters('pipelineHelmRetryattempt'),' ','PIPELINE_HELM_RETRYSLEEPSECONDS=',parameters('pipelineHelmRetrysleepseconds'),' ','bash')]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccount')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane Storage Account"
            },
            "properties": {
                "accountType": "[parameters('storageAccountSKU')]"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddresses')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane Public IP Address"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[tolower(concat(parameters('vmNamePrefix'),'-',variables('suffix')))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetwork')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane VirtualNetwork"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('virtualNetworkSubnet')]",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24"
                        },
                        "tags": {
                            "displayName": "Control Plane VirtualNetwork Subnet"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('networkSecurityGroup')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane Network Security Group"
            },
            "properties": {
                "securityRules": [
                    {
                        "name": "ssh",
                        "properties": {
                            "description": "Allow SSH",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 200,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "http",
                        "properties": {
                            "description": "Allow HTTP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 210,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('networkInterface')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane Network Interface"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddresses'))]"
                            },
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetwork')), '/subnets/', variables('virtualNetworkSubnet'))]"
                            }
                        }
                    }
                ]
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/',variables('publicIPAddresses'))]",
                "[concat('Microsoft.Network/virtualNetworks/',variables('virtualNetwork'))]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(parameters('vmNamePrefix'),'-', variables('suffix'))]",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane VM"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(parameters('vmNamePrefix'), variables('suffix'))]",
                    "adminUsername": "[parameters('sshUserName')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/',parameters('sshUserName'),'/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('sshPublicKey')]"
                                }
                            ]
                        }
                    },
                    "customData": "[base64(variables('userDataScript'))]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('imageSku')]",
                        "version": "[variables('imageVersion')]"
                    },
                    "osDisk": {
                        "name": "[tolower(concat(parameters('vmNamePrefix'),'-disk-', variables('suffix')))]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterface'))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccount'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterface'))]"
            ]
        }
    ],
    "outputs": {
      "publicDns": {
          "value": "[reference(variables('publicIPAddresses')).dnsSettings.fqdn]",
          "type": "string"
      },
      "pipeline": {
          "value": "[concat('http://', reference(variables('publicIPAddresses')).dnsSettings.fqdn, '/pipeline')]",
          "type": "string"
      },
      "grafana": {
        "value": "[concat('http://', reference(variables('publicIPAddresses')).dnsSettings.fqdn, '/grafana')]",
        "type": "string"
      },
      "prometheusServer": {
        "value": "[concat('http://', reference(variables('publicIPAddresses')).dnsSettings.fqdn, '/prometheus')]",
        "type": "string"
      },
      "prometheusAlertManager": {
        "value": "[concat('http://', reference(variables('publicIPAddresses')).dnsSettings.fqdn, '/alertmanager')]",
        "type": "string"
      },
      "ssh": {
        "value": "[concat('ssh ubuntu@', reference(variables('publicIPAddresses')).dnsSettings.fqdn)]",
        "type": "string"
      }
    }
}
