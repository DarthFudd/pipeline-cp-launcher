{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "storageNamePrefix": {
            "type": "string",
            "minLength": "3",
            "maxLength": "10",
            "defaultValue": "storage",
            "metadata": {
              "description": "The prefix of the storage account name. Use only lowercase letters and numbers."
            }
        },
        "storageAccountSKU": {
            "defaultValue": "Premium_LRS",
            "allowedValues": [
                "Premium_LRS",
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Standard_ZRS"
            ],
            "type": "string",
            "metadata": {
                "description": "The type of the Storage account SKU that will use the Pipeline Control Plane."
            }
        },
        "sshUserName": {
            "defaultValue": "ubuntu",
            "type": "string",
            "metadata": {
                "description": "The username SSH to the Virtual Machine hosting Pipeline Control Plane."
            }
        },
        "sshPublicKey": {
            "type": "string",
            "metadata": {
                "description": "The SSH public key in text format which will be assigned to the SSH User."
            }
        },
        "vmSize": {
            "defaultValue": "Standard_B2ms",
            "allowedValues": [
                "Standard_B2s",
                "Standard_B2ms",
                "Standard_B4ms",
                "Standard_D2s_v3",
                "Standard_D4s_v3"
            ],
            "type": "string",
            "metadata": {
                "description": "The size of the Virtual Machine that will host the Pipeline Control Plane. For example: Standard_XX where XX can A1, A2, A3 etc"
            }
        },
        "vmNamePrefix": {
            "defaultValue": "pipeline-cp",
            "type": "string",
            "minLength":"1",
            "maxLength": "49",
            "metadata": {
                "description": "The prefix of the virtual machine that will host the Pipeline Control Plane."
            }
        },
        "smtpServerAddress": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Optional. The address of your SMTP server. Fill this property to receive cluster related alerts through email."
            }
        },
        "smtpUser": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Optional. The username of your SMTP account. Fill this property to receive cluster related alerts through email."
            }
        },
        "smtpPassword": {
            "defaultValue": "",
            "type": "securestring",
            "metadata": {
                "description": "Optional. The password of your SMTP account. Fill this property to receive cluster related alerts through email."
            }
        },
        "smtpFrom": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Optional. The email address that will be used as a 'from' address. Fill this property to receive cluster related alerts through email."
            }
        },
        "smtpTo": {
            "defaultValue": "to@example.com",
            "type": "string",
            "metadata": {
                "description": "Optional. Fill this property to receive cluster related alerts through email."
            }
        },
        "slackWebhookUrl": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Optional. The slack web hook URL. Fill this property to receive cluster related alerts through Slack."
            }
        },
        "slackChannel": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. A Slack channel by name with \"channel\": \"#other-channel\", or send a Slackbot message to a specific user with \"channel\": \"@username\". Fill this property to receive cluster related alerts through Slack. "
            }
        },
        "pipelineImageTag": {
            "defaultValue": "0.3.0",
            "type": "string",
            "metadata": {
                "description": "Please specify the version of Pipline image to be used."
            }
        },
        "promIngUser": {
            "defaultValue": "admin",
            "minLength": 1,
            "type": "string",
            "metadata": {
                "description": "Please specify the username of the Prometheus user to be created."
            }
        },
        "promIngPass": {
            "type": "securestring",
            "minLength": 8,
            "metadata": {
                "description": "Please specify the password of the Prometheus user to be created."
            }
        },
        "grafanaUser": {
            "type": "string",
            "defaultValue": "admin",
            "minLength": 1,
            "metadata": {
                "description": "Please specify the username of the Grafana user to be created."
            }
        },
        "grafanaPass": {
            "type": "securestring",
            "minLength": 8,
            "metadata": {
                "description": "Please specify the password of the Grafana user to be created."
            }
        },
        "githubOrgs": {
            "type": "string",
            "metadata": {
                "description": "Please specify the comma separated list of GitHub organizations to grant access to for the Pipeline CI."
            }
        },
        "githubClient": {
            "type": "string",
            "metadata": {
                "description": "The Cliend ID of the OAuth App in GitHub."
            }
        },
        "githubSecret": {
            "type": "securestring",
            "metadata": {
                "description": "The Cliend Secret of the OAuth App in GitHub."
            }
        },
        "azureClientId": {
            "type": "string",
            "metadata": {
                "description": "The ID of registered application in AD."
            }
        },
        "azureClientSecret": {
            "type": "securestring",
            "metadata": {
                "description": "The password of the registered application in AD."
            }
        },
        "azureSubscriptionId": {
            "type": "string",
            "metadata": {
                "description": "The id of your subscription that you want to use."
            }
        },
        "azureTenantId": {
            "type": "string",
            "metadata": {
                "description": "The tenant id of your azure account."
            }
        },
        "pipelineHelmRetryattempt": {
            "type": "string",
            "defaultValue": "30",
            "metadata": {
                "description": "The number of attemps that Pipeline tries to install Helm. Also the number times Pipeline pings Helm/Tiller wether it's up and running."
            }
        },
        "pipelineHelmRetrysleepseconds": {
            "type": "string",
            "defaultValue": "15",
            "metadata": {
                "description": "The time in seconds that Pipeline waits between attempts."
            }
        }
    },
    "variables": {
        "imagePublisher": "Canonical",
        "imageOffer": "UbuntuServer",
        "imageSku": "16.04-LTS",
        "imageVersion": "latest",
        "suffix": "[tolower(uniqueString(resourceGroup().id, deployment().name, subscription().subscriptionId))]",
        "storageAccount": "[concat(parameters('storageNamePrefix'),variables('suffix'))]",
        "networkInterface": "[concat(parameters('vmNamePrefix'),'-nInterface-',variables('suffix'))]",
        "publicIPAddresses": "[concat(parameters('vmNamePrefix'),'-publicIP-',variables('suffix'))]",
        "virtualNetwork": "[concat(parameters('vmNamePrefix'),'-vNet-',variables('suffix'))]",
        "virtualNetworkSubnet": "[concat(parameters('vmNamePrefix'),'-vNetSunet-',variables('suffix'))]",
        "networkSecurityGroup": "[concat(parameters('vmNamePrefix'),'-networkSG-',variables('suffix'))]",
        "userDataScript": "[concat('#!/bin/bash\n','echo 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 | base64 -d | gunzip | ','SMTP_SERVER_ADDRESS=',parameters('smtpServerAddress'),' ','SMTP_USER=',parameters('smtpUser'),' ','SMTP_PASSWORD=',base64(parameters('smtpPassword')),' ','SMTP_FROM=',parameters('smtpFrom'),' ','SMTP_TO=',parameters('smtpTo'),' ','SLACK_WEBHOOK_URL=',parameters('slackWebhookUrl'),' ','SLACK_CHANNEL=',parameters('slackChannel'),' ','PIPELINE_IMAGE_TAG=',parameters('pipelineImageTag'),' ','PROM_ING_USER=',parameters('promIngUser'),' ','PROM_ING_PASS=',parameters('promIngPass'),' ','GRAFANA_USER=',parameters('grafanaUser'),' ','GRAFANA_PASS=',parameters('grafanaPass'),' ','GITHUB_ORGS=',parameters('githubOrgs'),' ','GITHUB_CLIENT=',parameters('githubClient'),' ','GITHUB_SECRET=',parameters('githubSecret'),' ','AZURE_CLIENT_ID=',base64(parameters('azureClientId')),' ','AZURE_CLIENT_SECRET=',base64(parameters('azureClientSecret')),' ','AZURE_SUBSCRIPTION_ID=',base64(parameters('azureSubscriptionId')),' ','AZURE_TENANT_ID=',base64(parameters('azureTenantId')),' ','PIPELINE_HELM_RETRYATTEMPT=',parameters('pipelineHelmRetryattempt'),' ','PIPELINE_HELM_RETRYSLEEPSECONDS=',parameters('pipelineHelmRetrysleepseconds'),' ','bash')]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccount')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane Storage Account"
            },
            "properties": {
                "accountType": "[parameters('storageAccountSKU')]"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddresses')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane Public IP Address"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[tolower(concat(parameters('vmNamePrefix'),'-',variables('suffix')))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetwork')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane VirtualNetwork"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('virtualNetworkSubnet')]",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24"
                        },
                        "tags": {
                            "displayName": "Control Plane VirtualNetwork Subnet"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('networkSecurityGroup')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane Network Security Group"
            },
            "properties": {
                "securityRules": [
                    {
                        "name": "ssh",
                        "properties": {
                            "description": "Allow SSH",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 200,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "http",
                        "properties": {
                            "description": "Allow HTTP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 210,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('networkInterface')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane Network Interface"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddresses'))]"
                            },
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetwork')), '/subnets/', variables('virtualNetworkSubnet'))]"
                            }
                        }
                    }
                ]
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/',variables('publicIPAddresses'))]",
                "[concat('Microsoft.Network/virtualNetworks/',variables('virtualNetwork'))]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(parameters('vmNamePrefix'),'-', variables('suffix'))]",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane VM"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(parameters('vmNamePrefix'), variables('suffix'))]",
                    "adminUsername": "[parameters('sshUserName')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/',parameters('sshUserName'),'/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('sshPublicKey')]"
                                }
                            ]
                        }
                    },
                    "customData": "[base64(variables('userDataScript'))]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('imageSku')]",
                        "version": "[variables('imageVersion')]"
                    },
                    "osDisk": {
                        "name": "[tolower(concat(parameters('vmNamePrefix'),'-disk-', variables('suffix')))]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterface'))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccount'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterface'))]"
            ]
        }
    ],
    "outputs": {
      "publicDns": {
          "value": "[reference(variables('publicIPAddresses')).dnsSettings.fqdn]",
          "type": "string"
      },
      "pipeline": {
          "value": "[concat('http://', reference(variables('publicIPAddresses')).dnsSettings.fqdn, '/pipeline')]",
          "type": "string"
      },
      "grafana": {
        "value": "[concat('http://', reference(variables('publicIPAddresses')).dnsSettings.fqdn, '/grafana')]",
        "type": "string"
      },
      "prometheusServer": {
        "value": "[concat('http://', reference(variables('publicIPAddresses')).dnsSettings.fqdn, '/prometheus')]",
        "type": "string"
      },
      "prometheusAlertManager": {
        "value": "[concat('http://', reference(variables('publicIPAddresses')).dnsSettings.fqdn, '/alertmanager')]",
        "type": "string"
      },
      "ssh": {
        "value": "[concat('ssh ubuntu@', reference(variables('publicIPAddresses')).dnsSettings.fqdn)]",
        "type": "string"
      }
    }
}
