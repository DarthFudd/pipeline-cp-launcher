{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "storageNamePrefix": {
            "type": "string",
            "minLength": "3",
            "maxLength": "10",
            "defaultValue": "storage",
            "metadata": {
              "description": "The prefix of the storage account name. Use only lowercase letters and numbers."
            }
        },
        "storageAccountSKU": {
            "defaultValue": "Premium_LRS",
            "allowedValues": [
                "Premium_LRS",
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Standard_ZRS"
            ],
            "type": "string",
            "metadata": {
                "description": "The type of the Storage account SKU that will use the Pipeline Control Plane."
            }
        },
        "sshUserName": {
            "defaultValue": "ubuntu",
            "type": "string",
            "metadata": {
                "description": "The username SSH to the Virtual Machine hosting Pipeline Control Plane."
            }
        },
        "sshPublicKey": {
            "type": "string",
            "metadata": {
                "description": "The SSH public key in text format which will be assigned to the SSH User."
            }
        },
        "vmSize": {
            "defaultValue": "Standard_B2ms",
            "allowedValues": [
                "Standard_B2s",
                "Standard_B2ms"
            ],
            "type": "string",
            "metadata": {
                "description": "The size of the Virtual Machine that will host the Pipeline Control Plane. For example: Standard_XX where XX can A1, A2, A3 etc"
            }
        },
        "vmNamePrefix": {
            "defaultValue": "pipeline-cp",
            "type": "string",
            "minLength":"1",
            "maxLength": "49",
            "metadata": {
                "description": "The prefix of the virtual machine that will host the Pipeline Control Plane."
            }
        },
        "smtpServerAddress": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Optional. The address of your SMTP server. Fill this property to receive cluster related alerts through email."
            }
        },
        "smtpUser": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Optional. The username of your SMTP account. Fill this property to receive cluster related alerts through email."
            }
        },
        "smtpPassword": {
            "defaultValue": "",
            "type": "securestring",
            "metadata": {
                "description": "Optional. The password of your SMTP account. Fill this property to receive cluster related alerts through email."
            }
        },
        "smtpFrom": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Optional. The email address that will be used as a 'from' address. Fill this property to receive cluster related alerts through email."
            }
        },
        "smtpTo": {
            "defaultValue": "to@example.com",
            "type": "string",
            "metadata": {
                "description": "Optional. Fill this property to receive cluster related alerts through email."
            }
        },
        "slackWebhookUrl": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Optional. The slack web hook URL. Fill this property to receive cluster related alerts through Slack."
            }
        },
        "slackChannel": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. A Slack channel by name with \"channel\": \"#other-channel\", or send a Slackbot message to a specific user with \"channel\": \"@username\". Fill this property to receive cluster related alerts through Slack. "
            }
        },
        "pipelineImageTag": {
            "defaultValue": "latest",
            "type": "string",
            "metadata": {
                "description": "Please specify the version of Pipline image to be used."
            }
        },
        "promIngUser": {
            "defaultValue": "admin",
            "minLength": 1,
            "type": "string",
            "metadata": {
                "description": "Please specify the username of the Prometheus user to be created."
            }
        },
        "promIngPass": {
            "type": "securestring",
            "minLength": 8,
            "metadata": {
                "description": "Please specify the password of the Prometheus user to be created."
            }
        },
        "grafanaUser": {
            "type": "string",
            "defaultValue": "admin",
            "minLength": 1,
            "metadata": {
                "description": "Please specify the username of the Grafana user to be created."
            }
        },
        "grafanaPass": {
            "type": "securestring",
            "minLength": 8,
            "metadata": {
                "description": "Please specify the password of the Grafana user to be created."
            }
        },
        "githubOrgs": {
            "type": "string",
            "metadata": {
                "description": "Please specify the GitHub organizations whose repositories will be used by the Pipeline."
            }
        },
        "githubClient": {
            "type": "string",
            "metadata": {
                "description": "The Cliend ID of the newly created OAuth App in GitHub."
            }
        },
        "githubSecret": {
            "type": "securestring",
            "metadata": {
                "description": "The Cliend Secret of the newly created OAuth App in GitHub."
            }
        },
        "azureClientId": {
            "type": "string",
            "metadata": {
                "description": "The ID of registered application in AD."
            }
        },
        "azureClientSecret": {
            "type": "securestring",
            "metadata": {
                "description": "The password of the registered application in AD."
            }
        },
        "azureSubscriptionId": {
            "type": "string",
            "metadata": {
                "description": "The id of your subscription that you want to use."
            }
        },
        "azureTenantId": {
            "type": "string",
            "metadata": {
                "description": "The tenant id of your azure account."
            }
        },
        "pipelineHelmRetryattempt": {
            "type": "string",
            "defaultValue": "30",
            "metadata": {
                "description": "The number of attemps that Pipeline tries to install Helm. Also the number times Pipeline pings Helm/Tiller wether it's up and running."
            }
        },
        "pipelineHelmRetrysleepseconds": {
            "type": "string",
            "defaultValue": "15",
            "metadata": {
                "description": "The time in seconds that Pipeline waits between attempts."
            }
        }
    },
    "variables": {
        "imagePublisher": "Canonical",
        "imageOffer": "UbuntuServer",
        "imageSku": "16.04-LTS",
        "imageVersion": "latest",
        "suffix": "[tolower(uniqueString(resourceGroup().id, deployment().name, subscription().subscriptionId))]",
        "storageAccount": "[concat(parameters('storageNamePrefix'),variables('suffix'))]",
        "networkInterface": "[concat(parameters('vmNamePrefix'),'-nInterface-',variables('suffix'))]",
        "publicIPAddresses": "[concat(parameters('vmNamePrefix'),'-publicIP-',variables('suffix'))]",
        "virtualNetwork": "[concat(parameters('vmNamePrefix'),'-vNet-',variables('suffix'))]",
        "virtualNetworkSubnet": "[concat(parameters('vmNamePrefix'),'-vNetSunet-',variables('suffix'))]",
        "networkSecurityGroup": "[concat(parameters('vmNamePrefix'),'-networkSG-',variables('suffix'))]",
        "userDataScript": "[concat('#!/bin/bash\n','echo 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 | base64 -d | gunzip | ','SMTP_SERVER_ADDRESS=',parameters('smtpServerAddress'),' ','SMTP_USER=',parameters('smtpUser'),' ','SMTP_PASSWORD=',base64(parameters('smtpPassword')),' ','SMTP_FROM=',parameters('smtpFrom'),' ','SMTP_TO=',parameters('smtpTo'),' ','SLACK_WEBHOOK_URL=',parameters('slackWebhookUrl'),' ','SLACK_CHANNEL=',parameters('slackChannel'),' ','PIPELINE_IMAGE_TAG=',parameters('pipelineImageTag'),' ','PROM_ING_USER=',parameters('promIngUser'),' ','PROM_ING_PASS=',parameters('promIngPass'),' ','GRAFANA_USER=',parameters('grafanaUser'),' ','GRAFANA_PASS=',parameters('grafanaPass'),' ','GITHUB_ORGS=',parameters('githubOrgs'),' ','GITHUB_CLIENT=',parameters('githubClient'),' ','GITHUB_SECRET=',parameters('githubSecret'),' ','AZURE_CLIENT_ID=',base64(parameters('azureClientId')),' ','AZURE_CLIENT_SECRET=',base64(parameters('azureClientSecret')),' ','AZURE_SUBSCRIPTION_ID=',base64(parameters('azureSubscriptionId')),' ','AZURE_TENANT_ID=',base64(parameters('azureTenantId')),' ','PIPELINE_HELM_RETRYATTEMPT=',parameters('pipelineHelmRetryattempt'),' ','PIPELINE_HELM_RETRYSLEEPSECONDS=',parameters('pipelineHelmRetrysleepseconds'),' ','bash')]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccount')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane Storage Account"
            },
            "properties": {
                "accountType": "[parameters('storageAccountSKU')]"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddresses')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane Public IP Address"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[tolower(concat(parameters('vmNamePrefix'),'-',variables('suffix')))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetwork')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane VirtualNetwork"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('virtualNetworkSubnet')]",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24"
                        },
                        "tags": {
                            "displayName": "Control Plane VirtualNetwork Subnet"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('networkSecurityGroup')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane Network Security Group"
            },
            "properties": {
                "securityRules": [
                    {
                        "name": "ssh",
                        "properties": {
                            "description": "Allow SSH",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 200,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "http",
                        "properties": {
                            "description": "Allow HTTP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 210,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('networkInterface')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane Network Interface"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddresses'))]"
                            },
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetwork')), '/subnets/', variables('virtualNetworkSubnet'))]"
                            }
                        }
                    }
                ]
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/',variables('publicIPAddresses'))]",
                "[concat('Microsoft.Network/virtualNetworks/',variables('virtualNetwork'))]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(parameters('vmNamePrefix'),'-', variables('suffix'))]",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane VM"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(parameters('vmNamePrefix'), variables('suffix'))]",
                    "adminUsername": "[parameters('sshUserName')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/',parameters('sshUserName'),'/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('sshPublicKey')]"
                                }
                            ]
                        }
                    },
                    "customData": "[base64(variables('userDataScript'))]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('imageSku')]",
                        "version": "[variables('imageVersion')]"
                    },
                    "osDisk": {
                        "name": "[tolower(concat(parameters('vmNamePrefix'),'-disk-', variables('suffix')))]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterface'))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccount'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterface'))]"
            ]
        }
    ],
    "outputs": {
      "publicDns": {
          "value": "[reference(variables('publicIPAddresses')).dnsSettings.fqdn]",
          "type": "string"
      },
      "pipeline": {
          "value": "[concat('http://', reference(variables('publicIPAddresses')).dnsSettings.fqdn, '/pipeline')]",
          "type": "string"
      },
      "grafana": {
        "value": "[concat('http://', reference(variables('publicIPAddresses')).dnsSettings.fqdn, '/grafana')]",
        "type": "string"
      },
      "prometheusServer": {
        "value": "[concat('http://', reference(variables('publicIPAddresses')).dnsSettings.fqdn, '/prometheus')]",
        "type": "string"
      },
      "prometheusAlertManager": {
        "value": "[concat('http://', reference(variables('publicIPAddresses')).dnsSettings.fqdn, '/alertmanager')]",
        "type": "string"
      },
      "ssh": {
        "value": "[concat('ssh ubuntu@', reference(variables('publicIPAddresses')).dnsSettings.fqdn)]",
        "type": "string"
      }
    }
}
