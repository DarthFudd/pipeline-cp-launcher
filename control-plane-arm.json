{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "storageNamePrefix": {
            "type": "string",
            "minLength": "3",
            "maxLength": "10",
            "defaultValue": "storage",
            "metadata": {
              "description": "The prefix of the storage account name. Use only lowercase letters and numbers."
            }
        },
        "storageAccountSKU": {
            "defaultValue": "Premium_LRS",
            "allowedValues": [
                "Premium_LRS",
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Standard_ZRS"
            ],
            "type": "string",
            "metadata": {
                "description": "The type of the Storage account SKU that will use the Pipeline Control Plane."
            }
        },
        "sshUserName": {
            "defaultValue": "ubuntu",
            "type": "string",
            "metadata": {
                "description": "The username SSH to the Virtual Machine hosting Pipeline Control Plane."
            }
        },
        "sshPublicKey": {
            "type": "string",
            "metadata": {
                "description": "The SSH public key in text format which will be assigned to the SSH User."
            }
        },
        "vmSize": {
            "defaultValue": "Standard_B2ms",
            "allowedValues": [
                "Standard_B2s",
                "Standard_B2ms",
                "Standard_B4ms",
                "Standard_D2s_v3",
                "Standard_D4s_v3"
            ],
            "type": "string",
            "metadata": {
                "description": "The size of the Virtual Machine that will host the Pipeline Control Plane. For example: Standard_XX where XX can A1, A2, A3 etc"
            }
        },
        "vmNamePrefix": {
            "defaultValue": "pipeline-cp",
            "type": "string",
            "minLength":"1",
            "maxLength": "49",
            "metadata": {
                "description": "The prefix of the virtual machine that will host the Pipeline Control Plane."
            }
        },
        "smtpServerAddress": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Optional. The address of your SMTP server. Fill this property to receive cluster related alerts through email."
            }
        },
        "smtpUser": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Optional. The username of your SMTP account. Fill this property to receive cluster related alerts through email."
            }
        },
        "smtpPassword": {
            "defaultValue": "",
            "type": "securestring",
            "metadata": {
                "description": "Optional. The password of your SMTP account. Fill this property to receive cluster related alerts through email."
            }
        },
        "smtpFrom": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Optional. The email address that will be used as a 'from' address. Fill this property to receive cluster related alerts through email."
            }
        },
        "smtpTo": {
            "defaultValue": "to@example.com",
            "type": "string",
            "metadata": {
                "description": "Optional. Fill this property to receive cluster related alerts through email."
            }
        },
        "slackWebhookUrl": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Optional. The slack web hook URL. Fill this property to receive cluster related alerts through Slack."
            }
        },
        "slackChannel": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. A Slack channel by name with \"channel\": \"#other-channel\", or send a Slackbot message to a specific user with \"channel\": \"@username\". Fill this property to receive cluster related alerts through Slack. "
            }
        },
        "pipelineImageTag": {
            "defaultValue": "0.3.0",
            "type": "string",
            "metadata": {
                "description": "Please specify the version of Pipline image to be used."
            }
        },
        "promIngUser": {
            "defaultValue": "admin",
            "minLength": 1,
            "type": "string",
            "metadata": {
                "description": "Please specify the username of the Prometheus user to be created."
            }
        },
        "promIngPass": {
            "type": "securestring",
            "minLength": 8,
            "metadata": {
                "description": "Please specify the password of the Prometheus user to be created."
            }
        },
        "grafanaUser": {
            "type": "string",
            "defaultValue": "admin",
            "minLength": 1,
            "metadata": {
                "description": "Please specify the username of the Grafana user to be created."
            }
        },
        "grafanaPass": {
            "type": "securestring",
            "minLength": 8,
            "metadata": {
                "description": "Please specify the password of the Grafana user to be created."
            }
        },
        "githubOrgs": {
            "type": "string",
            "metadata": {
                "description": "Please specify the comma separated list of GitHub organizations to grant access to for the Pipeline CI."
            }
        },
        "githubClient": {
            "type": "string",
            "metadata": {
                "description": "The Cliend ID of the OAuth App in GitHub."
            }
        },
        "githubSecret": {
            "type": "securestring",
            "metadata": {
                "description": "The Cliend Secret of the OAuth App in GitHub."
            }
        },
        "azureClientId": {
            "type": "string",
            "metadata": {
                "description": "The ID of registered application in AD."
            }
        },
        "azureClientSecret": {
            "type": "securestring",
            "metadata": {
                "description": "The password of the registered application in AD."
            }
        },
        "azureSubscriptionId": {
            "type": "string",
            "metadata": {
                "description": "The id of your subscription that you want to use."
            }
        },
        "azureTenantId": {
            "type": "string",
            "metadata": {
                "description": "The tenant id of your azure account."
            }
        },
        "pipelineHelmRetryattempt": {
            "type": "string",
            "defaultValue": "30",
            "metadata": {
                "description": "The number of attemps that Pipeline tries to install Helm. Also the number times Pipeline pings Helm/Tiller wether it's up and running."
            }
        },
        "pipelineHelmRetrysleepseconds": {
            "type": "string",
            "defaultValue": "15",
            "metadata": {
                "description": "The time in seconds that Pipeline waits between attempts."
            }
        },
        "trustedUserCaUrl": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Optional. The URL to download the SSH TrustedUserCAKeys from."
            }
        }
    },
    "variables": {
        "imagePublisher": "Canonical",
        "imageOffer": "UbuntuServer",
        "imageSku": "16.04-LTS",
        "imageVersion": "latest",
        "suffix": "[tolower(uniqueString(resourceGroup().id, deployment().name, subscription().subscriptionId))]",
        "storageAccount": "[concat(parameters('storageNamePrefix'),variables('suffix'))]",
        "networkInterface": "[concat(parameters('vmNamePrefix'),'-nInterface-',variables('suffix'))]",
        "publicIPAddresses": "[concat(parameters('vmNamePrefix'),'-publicIP-',variables('suffix'))]",
        "virtualNetwork": "[concat(parameters('vmNamePrefix'),'-vNet-',variables('suffix'))]",
        "virtualNetworkSubnet": "[concat(parameters('vmNamePrefix'),'-vNetSunet-',variables('suffix'))]",
        "networkSecurityGroup": "[concat(parameters('vmNamePrefix'),'-networkSG-',variables('suffix'))]",
        "userDataScript": "[concat('#!/bin/bash\n','echo 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 | base64 -d | gunzip | ','SMTP_SERVER_ADDRESS=',parameters('smtpServerAddress'),' ','SMTP_USER=',parameters('smtpUser'),' ','SMTP_PASSWORD=',base64(parameters('smtpPassword')),' ','SMTP_FROM=',parameters('smtpFrom'),' ','SMTP_TO=',parameters('smtpTo'),' ','SLACK_WEBHOOK_URL=',parameters('slackWebhookUrl'),' ','SLACK_CHANNEL=',parameters('slackChannel'),' ','PIPELINE_IMAGE_TAG=',parameters('pipelineImageTag'),' ','PROM_ING_USER=',parameters('promIngUser'),' ','PROM_ING_PASS=',parameters('promIngPass'),' ','GRAFANA_USER=',parameters('grafanaUser'),' ','GRAFANA_PASS=',parameters('grafanaPass'),' ','GITHUB_ORGS=',parameters('githubOrgs'),' ','GITHUB_CLIENT=',parameters('githubClient'),' ','GITHUB_SECRET=',parameters('githubSecret'),' ','AZURE_CLIENT_ID=',base64(parameters('azureClientId')),' ','AZURE_CLIENT_SECRET=',base64(parameters('azureClientSecret')),' ','AZURE_SUBSCRIPTION_ID=',base64(parameters('azureSubscriptionId')),' ','AZURE_TENANT_ID=',base64(parameters('azureTenantId')),' ','PIPELINE_HELM_RETRYATTEMPT=',parameters('pipelineHelmRetryattempt'),' ','PIPELINE_HELM_RETRYSLEEPSECONDS=',parameters('pipelineHelmRetrysleepseconds'),' ','TRUSTED_USER_CA_URL=',parameters('trustedUserCaUrl'),' ','bash')]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccount')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane Storage Account"
            },
            "properties": {
                "accountType": "[parameters('storageAccountSKU')]"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddresses')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane Public IP Address"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[tolower(concat(parameters('vmNamePrefix'),'-',variables('suffix')))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetwork')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane VirtualNetwork"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('virtualNetworkSubnet')]",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24"
                        },
                        "tags": {
                            "displayName": "Control Plane VirtualNetwork Subnet"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('networkSecurityGroup')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane Network Security Group"
            },
            "properties": {
                "securityRules": [
                    {
                        "name": "ssh",
                        "properties": {
                            "description": "Allow SSH",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 200,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "http",
                        "properties": {
                            "description": "Allow HTTP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 210,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('networkInterface')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane Network Interface"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddresses'))]"
                            },
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetwork')), '/subnets/', variables('virtualNetworkSubnet'))]"
                            }
                        }
                    }
                ]
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/',variables('publicIPAddresses'))]",
                "[concat('Microsoft.Network/virtualNetworks/',variables('virtualNetwork'))]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(parameters('vmNamePrefix'),'-', variables('suffix'))]",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane VM"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(parameters('vmNamePrefix'), variables('suffix'))]",
                    "adminUsername": "[parameters('sshUserName')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/',parameters('sshUserName'),'/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('sshPublicKey')]"
                                }
                            ]
                        }
                    },
                    "customData": "[base64(variables('userDataScript'))]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('imageSku')]",
                        "version": "[variables('imageVersion')]"
                    },
                    "osDisk": {
                        "name": "[tolower(concat(parameters('vmNamePrefix'),'-disk-', variables('suffix')))]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterface'))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccount'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterface'))]"
            ]
        }
    ],
    "outputs": {
      "publicDns": {
          "value": "[reference(variables('publicIPAddresses')).dnsSettings.fqdn]",
          "type": "string"
      },
      "pipeline": {
          "value": "[concat('http://', reference(variables('publicIPAddresses')).dnsSettings.fqdn, '/pipeline')]",
          "type": "string"
      },
      "grafana": {
        "value": "[concat('http://', reference(variables('publicIPAddresses')).dnsSettings.fqdn, '/grafana')]",
        "type": "string"
      },
      "prometheusServer": {
        "value": "[concat('http://', reference(variables('publicIPAddresses')).dnsSettings.fqdn, '/prometheus')]",
        "type": "string"
      },
      "prometheusAlertManager": {
        "value": "[concat('http://', reference(variables('publicIPAddresses')).dnsSettings.fqdn, '/alertmanager')]",
        "type": "string"
      },
      "ssh": {
        "value": "[concat('ssh ubuntu@', reference(variables('publicIPAddresses')).dnsSettings.fqdn)]",
        "type": "string"
      }
    }
}
